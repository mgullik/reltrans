# 1 "main_test.f90"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/Users/gullo/Work/git/reverberation_code//"
# 1 "main_test.f90"
program main_test
!  make -f revmakefile run
!  make -f revmakefile_laptop run
  implicit none
  integer ne,i,ifl
  parameter (ne=6000)
  real Emax, Emin, ear(0:ne), param(19), photar(ne), E, dE
  double precision :: relxill_par(12), dear(0:ne), dphotar(ne), dphoter(ne)
  character (len = 100) :: char 

!managing the time test calculation
  integer :: count,count1,count0,count3,count2,count_max,count_rate

  !----Parameters-------------------
  param(1)  = 6.0     !h     !Source height **-ve means in units of BH horizon, +ve means in Rg***
  param(2)  = 0.998     !a     !BH spin
  param(3)  = 30.0    !inc   !Inclination angle in degrees
  param(4)  = -1.0    !rin   !Disk inner radius **-ve means in units of ISCO, +ve means in Rg***
  param(5)  = 400.0 !rout  !Disk outer radius in Rg - will probably hardwire this
  param(6)  = 0.0     !zcos  !Cosmological redshift
  param(7)  = 2.0     !Gamma !Photon index
  param(8)  = 3.0    !logxi !log10xi - ionisation parameter
  param(9)  = 1.0     !Afe   !Iron abundance      
!  param(10) = 300.0   !kTe   !Electron temperature ***IN OBSERVER'S RESTFRAME***
  param(10) = 15      !log(n_e) density for xillverD 
  param(11) = 0.0     !Nh
  param(12) = 1.0     !1onB  !(1/\mathcal{B}): boosting fudge factor that lowers normalisation of reflection spectrum
  param(13) = 10.0    !M     !BH mass in solar masses
  param(14) = 0.0    !flo   !Lowest frequency in band (Hz)
  param(15) = 0.0   !fhi   !Highest frequency in band (Hz)
  param(16) = 1       !ReIm  !1=Re, 2=Im, 3=modulus, 4=time lag (s), 5=folded modulus, 6=folded time lag (s)
  param(17) = 0.0     !DelA
  param(18) = 0.0     !DelAB
  param(19) = 0.0     !gamma
  !---------------------------------
  
  Emax  = 500.0
  Emin  = 0.1
  do i = 0,ne
    ear(i) = Emin * (Emax/Emin)**(real(i)/real(ne))
  end do

!Test to simply print the output of the model 
! ***************************************************************** !

 call tdreltrans(ear,ne,param,ifl,photar)
  
  do i = 1,ne
     E  = 0.5 * ( ear(i) + ear(i-1) )
     dE = ear(i) - ear(i-1)
     if( param(16) .gt. 3.5 .and. param(16) .lt. 4.5 .or. param(16) .gt. 5.5 )then
        write(99,*)E, photar(i)/dE

     else

        write(99,*)E, E**2*photar(i)/dE




     end if
  end do
! ***************************************************************** !




!Call directly relxilllp to compare with our model 
!***************************************************************** !

  ! relxill_par(1)  = dble(param(1) )
  ! relxill_par(2)  = dble(param(2) )
  ! relxill_par(3)  = dble(param(3) )
  ! relxill_par(4)  = dble(param(4) )
  ! relxill_par(5)  = dble(param(5) )
  ! relxill_par(6)  = dble(param(6) )
  ! relxill_par(7)  = dble(param(7) )
  ! relxill_par(8)  = dble(param(8) )
  ! relxill_par(9)  = dble(param(9) )
  ! relxill_par(10) = 300.d0 
  ! relxill_par(11) = dble(param(12)) 
  ! relxill_par(12) = 1.d0 
  

  ! dear = dble(ear)
  ! call lmodrelxilllpf(dear, ne, relxill_par, ifl, dphotar, dphoter, char)

  ! do i = 1, ne 
  !    E  = 0.5 * ( ear(i) + ear(i-1) )
  !    dE = ear(i) - ear(i-1)
  !    write(88, *) E, E**2 * dphotar(i)/ dE
  ! enddo

! ***************************************************************** !



!Test of the time 
! ***************************************************************** !
!         param(14) = 0.0166016
!         param(15) = 0.0458984

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 
!       write(*,*) 

!         param(16) = 2

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 

!         param(1)  = 5.0
!         param(14) = 0.0458984
!         param(15) = 0.12207
!         param(16) = 1

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 
!       write(*,*) 

!         param(16) = 2

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 



!         param(14) = 0.12207
!         param(15) = 0.311523
!         param(16) = 1

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 
!       write(*,*) 

!         param(16) = 2
!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 

!         param(14) = 0.311523
!         param(15) = 0.788085
!         param(16) = 1

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 
!       write(*,*) 

!         param(16) = 2

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 

!         param(14) = 0.788085
!         param(15) = 1.97949 
!         param(16) = 1

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 
!       write(*,*) 
!         param(16) = 2

!       write(*,*) "----------------------------------------------------"
!         call system_clock(count0,count_rate,count_max)
!         call tdreltrans(ear,ne,param,ifl,photar)
!         call system_clock(count1,count_rate,count_max)
!         write(*,*)"TOTAL CPU time=",real(count1-count0)/real(count_rate)
!       write(*,*) "----------------------------------------------------"
!       write(*,*) 

! ***************************************************************** !
  
end program main_test
